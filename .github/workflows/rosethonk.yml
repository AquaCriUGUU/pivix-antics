# This is a basic workflow that is manually triggered

name: rosefile antics

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      roseusername:
        description: 'username of rosefile.net: '
        default: ''
        required: true
      rosepassword:
        description: 'password of rosefile.net: '
        default: ''
        required: true
      listurl:
        description: 'List URL: '
        default: ''
        required: true
      mysteriousbashscripturl:
        description: 'URL of the mysterious bash script that would apply for every rar archive made in the process: '
        default: ''
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "rosedump"
  rosedump:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout Codes
      uses: actions/checkout@v2

    - name: Pre-processing
      run: |
        wget "https://github.com/P3TERX/Aria2-Pro-Core/releases/download/1.36.0_2021.08.22/aria2-1.36.0-static-linux-amd64.tar.gz"
        tar -xvzf aria2-1.36.0-static-linux-amd64.tar.gz
        chmod +x aria2c
        wget "https://www.rarlab.com/rar/rarlinux-x64-6.0.2.tar.gz"
        tar -xvzf rarlinux-x64-6.0.2.tar.gz
        chmod +x rar/rar
        wget "${{ github.event.inputs.listurl }}" -o list
        curl 'https://rosefile.net/account.php' -X POST -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8' -H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' -H 'Referer: https://rosefile.net/account.php?action=login' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Origin: https://rosefile.net' -H 'Connection: keep-alive' -H 'Upgrade-Insecure-Requests: 1' -H 'Sec-Fetch-Dest: document' -H 'Sec-Fetch-Mode: navigate' -H 'Sec-Fetch-Site: same-origin' -H 'Sec-Fetch-User: ?1' -H 'TE: trailers' --data 'action=fastlogin&task=login&ref=&formhash=82cde7e5&username=${{ github.event.inputs.roseusername }}&password=${{ github.event.inputs.rosepassword }}' --cookie-jar barbruh.txt > /dev/null 2> /dev/null
        wget "${{ github.event.inputs.mysteriousbashscripturl }}" > /dev/null 2> /dev/null
        scriptfilename="${${{ github.event.inputs.mysteriousbashscripturl }}##*/}"
        sed -i 's/____github.event.inputs.mysteriousbashscripturl----/$scriptfilename/g' rosefile.sh
    
    - name: Start Dumping
      if: hashFiles('list')
      continue-on-error: true
      run: |
        OLD_IFS=$IFS
        IFS=$'\n'
        while [ -s "list" ];     do         head -1 list >> finished;         currentline=`head -1 list`;         urls=`echo "$currentline" | cut -d\| -f2 | grep -Po '(?<=-).*?(?=-)'`;         password=`echo "$currentline" | cut -d\| -f3 | sed 's/^-//g;s/-$//g'`;         [ "$password" = "ç„¡" ] && password=""                  for url in `echo "$urls" | sed 's/\t/\n/g' | grep 'rosefile'`;         do             bash rosefile.sh "$url" >> log;           done;                  tail -n +2 list > list2;  rar a -ep1 -htb -m5 -ma5 -rr5 -ts -tsp -ol barbruh.rar log list2; bash "${{ github.event.inputs.mysteriousbashscripturl }}" barbruh.rar;      rm -f list barbruh.rar log;         [ -s "list2" ] && mv list2 list;     done

    - name: Pre-Cleanup
      if: hashFiles('*.114514')
      run: |
        for file in `ls | grep -E "\.114514$"`; do mv "$file" "${file%.114514}"; done

    - name: Cleanup
      if: hashFiles('*.rar')
      run: |
        ls -lh
        echo
        stat *
        rm *.rar -f
