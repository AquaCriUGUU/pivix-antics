# This is a basic workflow that is manually triggered

name: dudisk antics

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      sharelink:
        description: 'Dudisk Share Link: '
        default: ''
        required: true
      password:
        description: 'Dudisk Share Password: '
        default: ''
        required: false
      mysteriousbashscripturl:
        description: 'URL of the mysterious bash script that would apply for every rar archive made in the process: '
        default: ''
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "rosedump"
  dudiskantics:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout Codes
      uses: actions/checkout@v2

    - name: Pre-processing
      run: |
        wget "https://github.com/P3TERX/Aria2-Pro-Core/releases/download/1.36.0_2021.08.22/aria2-1.36.0-static-linux-amd64.tar.gz"
        tar -xvzf aria2-1.36.0-static-linux-amd64.tar.gz
        chmod +x aria2c
        wget "https://www.rarlab.com/rar/rarlinux-x64-6.0.2.tar.gz"
        tar -xvzf rarlinux-x64-6.0.2.tar.gz
        chmod +x rar/rar
        aria2c "${{ github.event.inputs.mysteriousbashscripturl }}" --out "dudisk.sh" > /dev/null 2> /dev/null

    - name: Generating Links
      continue-on-error: true
      run: |
        bash dudisk.sh "${{ github.event.inputs.sharelink }}" "${{ github.event.inputs.password }}"

    - name: Downloading and Reuploading
      continue-on-error: true
      run: |
        mkdir temp; for line in `cat download.*`; do eval "$line"; for barbruh in `ls temp`; do bash mysteriousbashscript.sh "temp/$barbruh"; rm temp/* -rf; done; done
