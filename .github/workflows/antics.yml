# This is a basic workflow that is manually triggered

name: pixiv antics

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      mode:
        description: 'Dump by Artist ID (artist), Tags (tags), or Artist ID and Tags combined (combined)? '
        default: 'artist'
        required: true
      parameters:
        description: 'curl parameters used by pixiv: '
        default: ''
        required: true
      loglevel:
        description: 'Log Level (silent, default, verbose): '
        default: 'default'
        required: true
      artist:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Artist ID: '
        # Default value if no value is explicitly provided
        default: ''
        # Input has to be provided for the workflow to run
        required: false
      tags:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Tags: '
        # Default value if no value is explicitly provided
        default: ''
        # Input has to be provided for the workflow to run
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "dump"
  dump:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout Codes
      uses: actions/checkout@v2

    - name: Start Dumping
      run: |
        sudo apt-get update
        sudo apt-get install -y aria2 curl
        wget "https://github.com/P3TERX/Aria2-Pro-Core/releases/download/1.36.0_2021.08.22/aria2-1.36.0-static-linux-amd64.tar.gz"
        tar -xvzf aria2-1.36.0-static-linux-amd64.tar.gz
        chmod +x aria2c
        echo "${{ github.event.inputs.parameters }}" > parameters.txt
        mkdir wiebitte; cd wiebitte
        bash ../pixiv.sh "${{ github.event.inputs.loglevel }}" "${{ github.event.inputs.mode }}" "${{ github.event.inputs.artist }}" "${{ github.event.inputs.tags }}"
        cd ..
        mv "wiebitte" "${{ github.event.inputs.mode }}.${{ github.event.inputs.artist }}.${{ github.event.inputs.tags }}"
        tar -cvf "${{ github.event.inputs.mode }}.${{ github.event.inputs.artist }}.${{ github.event.inputs.tags }}.tar" "${{ github.event.inputs.mode }}.${{ github.event.inputs.artist }}.${{ github.event.inputs.tags }}"
    
    - name: Upload "Artifact"
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.inputs.mode }}.${{ github.event.inputs.artist }}.${{ github.event.inputs.tags }}
        path: "/home/runner/work/pivix-antics/pivix-antics/wiebitte/${{ github.event.inputs.mode }}.${{ github.event.inputs.artist }}.${{ github.event.inputs.tags }}.rar"
